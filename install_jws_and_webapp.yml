---
- hosts: all
  become: true
  gather_facts: true
  vars:
    # JWS installation settings
    tomcat_setup: true
    tomcat_install_method: local_zipfiles
    tomcat_install_dir: /opt
    jboss_web_version: '5.6'
    tomcat_home: "/opt/jws-{{ jboss_web_version }}/tomcat/"
    tomcat_zipfile: "jws-{{ jboss_web_version }}.0-application-server.zip"
    tomcat_listen_http_bind_address: 127.0.0.1
    tomcat_systemd_enabled: True
    tomcat_service_name: jws
    # install Java using RPM
    tomcat_java_version: 1.8.0
    app_id: simple-webapp
    # override the following vars to deploy 1.1
    app_version: 1.0
    app_name: "{{ app_id }}.war"
    app_url: "https://people.redhat.com/~rpelisse/{{ app_id }}-{{ app_version }}.war"
    app_path: "/{{ app_id }}"
    jws_up_wait_time: 10
    path_to_result_file: /tmp/results.txt
  collections:
    - redhat.jws
  pre_tasks:

    - ansible.builtin.assert:
        that:
          - tomcat_zipfile is defined
        quiet: true

    - ansible.builtin.include_role:
        name: jws

  tasks:
    - ansible.builtin.include_tasks: tasks/deploy_app.yml
  post_tasks:

    - name: "Wait for port 8080 to be available (ensure that JWS has finished restarting)"
      ansible.builtin.wait_for:
        port: 8080

    - name: "Set path to result file: {{ path_to_result_file }}"
      ansible.builtin.set_fact:
        result_file: "{{ path_to_result_file }}"

    - name: "Define URL to deployed webapp: {{ app_path }}."
      ansible.builtin.set_fact:
        url_to_webapp: "http://{{ tomcat_listen_http_bind_address }}:8080/{{ app_path }}/"

    - name: "Check that deployed webapp is accessible: {{ url_to_webapp }}"
      ansible.builtin.get_url:
        url: "{{ url_to_webapp }}"
        dest: "{{ result_file }}"
      register: res

    - name: "Check that request was successfully processed"
      ansible.builtin.assert:
        that:
          - res is defined
          - res.status_code == 200
        quiet: true

    - ansible.builtin.debug:
        msg: "{{ lookup('file', result_file) }}"
